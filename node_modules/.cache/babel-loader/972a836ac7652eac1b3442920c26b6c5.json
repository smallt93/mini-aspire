{"ast":null,"code":"import _defineProperty from \"/Users/mr942/Projects/mini-aspire/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mr942/Projects/mini-aspire/src/components/LoanForm/LoanForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../FormInput/FormInput';\nimport { countryData } from './CountryData';\nimport { LoansWrap, LoansItem, SubmitAction, SubmitButton, LoanMessage } from './LoanForm.style';\nconst validationSchema = Yup.object().shape({\n  identificationNumber: Yup.string().trim().required('Personal Identification number is required'),\n  dateOfBirth: Yup.string().trim().required('Date of birth is required'),\n  country: Yup.string().trim().required('The country is required'),\n  phoneNumber: Yup.string().trim().required('The phone number is Required'),\n  amount: Yup.string().trim().required('The amount is required'),\n  loanTerm: Yup.string().trim().required('The loan term is required')\n});\nconst initialValues = {\n  identificationNumber: '',\n  dateOfBirth: '',\n  country: '',\n  phoneNumber: '',\n  amount: '',\n  loanTerm: ''\n};\n\nclass LoanForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loanSubmit = values => {\n      const loanSubmit = this.props.loanSubmit;\n\n      const loanValues = _objectSpread({}, values, {\n        status: 'process',\n        loanDate: new Date()\n      });\n\n      loanSubmit(loanValues);\n    };\n\n    this.renderSubmitBtn = () => {\n      const isLoading = this.props.isLoading;\n      return isLoading ? React.createElement(SubmitButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Loading ...\") : React.createElement(SubmitButton, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Submit\");\n    };\n\n    this.renderLoanForm = () => React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.loanSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"identificationNumber\",\n      label: \"Personal Identification Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"date\",\n      name: \"dateOfBirth\",\n      label: \"Date Of Birth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"select\",\n      name: \"country\",\n      label: \"Country\",\n      options: countryData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"number\",\n      name: \"phoneNumber\",\n      label: \"Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"number\",\n      name: \"amount\",\n      label: \"Amount (USD Only)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"date\",\n      name: \"loanTerm\",\n      label: \"Loan Term\",\n      minDate: new Date(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(SubmitAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.renderSubmitBtn())));\n\n    this.renderLoanMessage = () => React.createElement(LoanMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Your loan has been submitted successfully.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \"Thank you and wait for your loan to get officially approved\");\n  }\n\n  render() {\n    const isLoanSuccess = this.props.isLoanSuccess;\n    return React.createElement(LoansWrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(LoansItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, isLoanSuccess ? this.renderLoanMessage() : this.renderLoanForm()));\n  }\n\n}\n\nexport default LoanForm;","map":{"version":3,"sources":["/Users/mr942/Projects/mini-aspire/src/components/LoanForm/LoanForm.js"],"names":["React","Component","Formik","Form","Yup","FormInput","countryData","LoansWrap","LoansItem","SubmitAction","SubmitButton","LoanMessage","validationSchema","object","shape","identificationNumber","string","trim","required","dateOfBirth","country","phoneNumber","amount","loanTerm","initialValues","LoanForm","loanSubmit","values","props","loanValues","status","loanDate","Date","renderSubmitBtn","isLoading","renderLoanForm","renderLoanMessage","render","isLoanSuccess"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../FormInput/FormInput';\nimport { countryData } from './CountryData';\nimport {\n  LoansWrap,\n  LoansItem,\n  SubmitAction,\n  SubmitButton,\n  LoanMessage,\n} from './LoanForm.style';\n\nconst validationSchema = Yup.object().shape({\n  identificationNumber: Yup.string().trim().required('Personal Identification number is required'),\n  dateOfBirth: Yup.string().trim().required('Date of birth is required'),\n  country: Yup.string().trim().required('The country is required'),\n  phoneNumber: Yup.string().trim().required('The phone number is Required'),\n  amount: Yup.string().trim().required('The amount is required'),\n  loanTerm: Yup.string().trim().required('The loan term is required'),\n});\n\nconst initialValues = {\n  identificationNumber: '',\n  dateOfBirth: '',\n  country: '',\n  phoneNumber: '',\n  amount: '',\n  loanTerm: '',\n};\n\nclass LoanForm extends Component {\n  loanSubmit = (values) => {\n    const { loanSubmit } = this.props;\n    const loanValues = {\n      ...values,\n      status: 'process',\n      loanDate: new Date(),\n    }\n    loanSubmit(loanValues);\n  }\n\n  renderSubmitBtn = () => {\n    const { isLoading } = this.props;\n    return (\n      isLoading\n        ? <SubmitButton>Loading ...</SubmitButton>\n        : <SubmitButton type=\"submit\">Submit</SubmitButton>\n    );\n  }\n\n  renderLoanForm = () => (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={this.loanSubmit}\n    >\n      <Form>\n        <FormInput\n          type=\"text\"\n          name=\"identificationNumber\"\n          label=\"Personal Identification Number\"\n        />\n        <FormInput\n          type=\"date\"\n          name=\"dateOfBirth\"\n          label=\"Date Of Birth\"\n        />\n        <FormInput\n          type=\"select\"\n          name=\"country\"\n          label=\"Country\"\n          options={countryData}\n        />\n        <FormInput\n          type=\"number\"\n          name=\"phoneNumber\"\n          label=\"Phone Number\"\n        />\n        <FormInput\n          type=\"number\"\n          name=\"amount\"\n          label=\"Amount (USD Only)\"\n        />\n        <FormInput\n          type=\"date\"\n          name=\"loanTerm\"\n          label=\"Loan Term\"\n          minDate={new Date()}\n        />\n        <SubmitAction>\n          {this.renderSubmitBtn()}\n        </SubmitAction>\n      </Form>\n    </Formik>\n  )\n\n  renderLoanMessage = () => (\n    <LoanMessage>\n      Your loan has been submitted successfully.\n      <br />\n      Thank you and wait for your loan to get officially approved\n    </LoanMessage>\n  )\n\n  render() {\n    const { isLoanSuccess } = this.props;\n    return (\n      <LoansWrap>\n        <LoansItem>\n          {isLoanSuccess\n            ? this.renderLoanMessage()\n            : this.renderLoanForm()\n          }\n        </LoansItem>\n      </LoansWrap>\n    );\n  }\n}\n\nexport default LoanForm;"]},"metadata":{},"sourceType":"module"}