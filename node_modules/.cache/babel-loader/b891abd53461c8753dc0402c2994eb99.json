{"ast":null,"code":"import _defineProperty from \"/Users/mr942/Projects/mini-aspire/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mr942/Projects/mini-aspire/src/components/RegisterPage/UserRegister.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../FormInput/FormInput';\nimport { LoginItemWrap, LoginItem, LoginTitle, LoginButton } from '../LoginPage/LoginPage.style';\nconst validationSchema = Yup.object().shape({\n  userName: Yup.string().trim().required('Required'),\n  email: Yup.string().email('Invalid Email').trim().required('Required'),\n  password: Yup.string().trim().notOneOf(['123456', 123456], 'Your password is too simple').min(8, 'The password is greater than 8 characters').matches(/[0-9]/, 'The password contains at least one number').required('Required'),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Your password and confirm password is not match').required('Required')\n});\nconst initialValues = {\n  userName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\nexport default class UserRegister extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.userRegisterSubmit = values => {\n      const userRegister = this.props.userRegister;\n\n      const userData = _objectSpread({}, values, {\n        role: 'user'\n      });\n\n      console.log('userData', userData);\n      userRegister(values);\n    };\n\n    this.renderLoginBtn = () => {\n      const isLoading = this.props.isLoading;\n      return isLoading ? React.createElement(LoginButton, {\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Loading ...\") : React.createElement(LoginButton, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Create account\");\n    };\n  }\n\n  render() {\n    const userData = this.props.userData;\n    console.log(\"TCL: userData\", userData);\n    return React.createElement(LoginItemWrap, {\n      noFlex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(LoginItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(LoginTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"User Register\")), React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.userRegisterSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"userName\",\n      label: \"User Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      showPassword: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      label: \"Confirm password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.renderLoginBtn(), React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(LoginButton, {\n      register: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Back to login\"))))));\n  }\n\n}\nUserRegister.propTypes = {\n  isLoading: PropTypes.bool,\n  userRegister: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/mr942/Projects/mini-aspire/src/components/RegisterPage/UserRegister.js"],"names":["React","PureComponent","Link","PropTypes","Formik","Form","Yup","FormInput","LoginItemWrap","LoginItem","LoginTitle","LoginButton","validationSchema","object","shape","userName","string","trim","required","email","password","notOneOf","min","matches","confirmPassword","oneOf","ref","initialValues","UserRegister","userRegisterSubmit","values","userRegister","props","userData","role","console","log","renderLoginBtn","isLoading","render","propTypes","bool","func","isRequired"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../FormInput/FormInput';\nimport {\n  LoginItemWrap,\n  LoginItem,\n  LoginTitle,\n  LoginButton,\n} from '../LoginPage/LoginPage.style';\n\nconst validationSchema = Yup.object().shape({\n  userName: Yup.string().trim().required('Required'),\n  email: Yup.string().email('Invalid Email').trim().required('Required'),\n  password: Yup.string().trim()\n    .notOneOf(['123456', 123456], 'Your password is too simple')\n    .min(8, 'The password is greater than 8 characters')\n    .matches(/[0-9]/, 'The password contains at least one number')\n    .required('Required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Your password and confirm password is not match')\n    .required('Required'),\n});\n\n\nconst initialValues = {\n  userName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport default class UserRegister extends PureComponent {\n  static propTypes = {\n    isLoading: PropTypes.bool,\n    userRegister: PropTypes.func.isRequired,\n  }\n\n  userRegisterSubmit = (values) => {\n    const { userRegister } = this.props;\n    const userData = { \n      ...values,\n      role: 'user'\n    };\n    console.log('userData', userData);\n    userRegister(values);\n  }\n\n  renderLoginBtn = () => {\n    const { isLoading } = this.props;\n    return (\n      isLoading\n        ? <LoginButton primary>Loading ...</LoginButton>\n        : <LoginButton type=\"submit\">Create account</LoginButton>\n    );\n  }\n\n  render() {\n    const { userData } = this.props;\n    console.log(\"TCL: userData\", userData)\n    \n    return (\n      <LoginItemWrap noFlex>\n        <LoginItem>\n          <LoginTitle>\n            <h1>User Register</h1>\n          </LoginTitle>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={this.userRegisterSubmit}\n          >\n            <Form>\n              <FormInput\n                type=\"text\"\n                name=\"userName\"\n                label=\"User Name\"\n              />\n              <FormInput\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n              />\n              <FormInput\n                type=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                showPassword\n              />\n              <FormInput\n                type=\"password\"\n                name=\"confirmPassword\"\n                label=\"Confirm password\"\n              />\n              {this.renderLoginBtn()}\n              <Link to=\"/login\">\n                <LoginButton register>Back to login</LoginButton>\n              </Link>\n            </Form>\n          </Formik>\n        </LoginItem>\n      </LoginItemWrap>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}