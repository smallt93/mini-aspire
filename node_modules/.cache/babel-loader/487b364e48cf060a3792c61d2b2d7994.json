{"ast":null,"code":"import { all, call, put, takeLeading } from 'redux-saga/effects';\nimport * as LoanAPIs from '../../apis/loans';\nimport { actions as loanActions, LOAN_SUBMIT } from '../../reducers/loans';\nexport function* handleLoanSubmit({\n  loanValue\n}) {\n  try {\n    const loanResponseData = yield call(LoanAPIs.loanSubmit, loanValue);\n    const error = null;\n    if (error) throw error;\n    yield put(loanActions.loanSubmitSuccess(loanResponseData));\n  } catch (error) {\n    yield put(loanActions.loanSubmitFailed(error));\n  }\n}\nexport default function* authSaga() {\n  yield all([takeLeading(LOAN_SUBMIT, handleLoanSubmit)]);\n}","map":{"version":3,"sources":["/Users/mr942/Projects/mini-aspire/src/sagas/loans/loansSaga.js"],"names":["all","call","put","takeLeading","LoanAPIs","actions","loanActions","LOAN_SUBMIT","handleLoanSubmit","loanValue","loanResponseData","loanSubmit","error","loanSubmitSuccess","loanSubmitFailed","authSaga"],"mappings":"AAAA,SACEA,GADF,EACOC,IADP,EACaC,GADb,EAEEC,WAFF,QAGO,oBAHP;AAIA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SACEC,OAAO,IAAIC,WADb,EAEEC,WAFF,QAGO,sBAHP;AAKA,OAAO,UAAUC,gBAAV,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAA0C;AAC/C,MAAI;AACF,UAAMC,gBAAgB,GAAG,MAAMT,IAAI,CAACG,QAAQ,CAACO,UAAV,EAAsBF,SAAtB,CAAnC;AACA,UAAMG,KAAK,GAAG,IAAd;AAEA,QAAIA,KAAJ,EAAW,MAAMA,KAAN;AAEX,UAAMV,GAAG,CAACI,WAAW,CAACO,iBAAZ,CAA8BH,gBAA9B,CAAD,CAAT;AACD,GAPD,CAOE,OAAOE,KAAP,EAAc;AACd,UAAMV,GAAG,CAACI,WAAW,CAACQ,gBAAZ,CAA6BF,KAA7B,CAAD,CAAT;AACD;AACF;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMf,GAAG,CAAC,CACRG,WAAW,CAACI,WAAD,EAAcC,gBAAd,CADH,CAAD,CAAT;AAGD","sourcesContent":["import {\n  all, call, put,\n  takeLeading,\n} from 'redux-saga/effects';\nimport * as LoanAPIs from '../../apis/loans';\nimport { \n  actions as loanActions,\n  LOAN_SUBMIT,\n} from '../../reducers/loans';\n\nexport function* handleLoanSubmit({ loanValue }) {\n  try {\n    const loanResponseData = yield call(LoanAPIs.loanSubmit, loanValue);\n    const error = null;\n    \n    if (error) throw error;\n\n    yield put(loanActions.loanSubmitSuccess(loanResponseData));\n  } catch (error) {\n    yield put(loanActions.loanSubmitFailed(error));\n  }\n}\n\nexport default function* authSaga() {\n  yield all([\n    takeLeading(LOAN_SUBMIT, handleLoanSubmit),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}