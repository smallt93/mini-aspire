{"ast":null,"code":"var _jsxFileName = \"/Users/mr942/Projects/mini-aspire/src/components/LoginPage/LoginForm.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../FormInput/FormInput';\nimport { LoginItemWrap, LoginItem, LoginTitle, LoginButton } from './LoginPage.style';\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().trim().required('Invalid email'),\n  password: Yup.string().trim().required('Password is required')\n});\nconst initialValues = {\n  email: '',\n  password: ''\n};\nexport default class StudentLoginForm extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.login = loginValues => {\n      const login = this.props.login;\n      login(loginValues);\n    };\n\n    this.renderLoginBtn = () => {\n      const isLoading = this.props.isLoading;\n      return isLoading ? React.createElement(LoginButton, {\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Loading ...\") : React.createElement(LoginButton, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Login\");\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(LoginItemWrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(LoginItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(LoginTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Welcome to Aspire\")), React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form, {\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email or Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: 'password',\n      name: \"password\",\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), this.renderLoginBtn())), React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(LoginButton, {\n      register: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Register\"))));\n  }\n\n}\nStudentLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  errorMessage: PropTypes.any\n};","map":{"version":3,"sources":["/Users/mr942/Projects/mini-aspire/src/components/LoginPage/LoginForm.js"],"names":["React","PureComponent","PropTypes","Link","Formik","Form","Yup","FormInput","LoginItemWrap","LoginItem","LoginTitle","LoginButton","validationSchema","object","shape","email","string","trim","required","password","initialValues","StudentLoginForm","constructor","props","login","loginValues","renderLoginBtn","isLoading","state","render","propTypes","func","isRequired","bool","errorMessage","any"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../FormInput/FormInput';\nimport {\n  LoginItemWrap,\n  LoginItem,\n  LoginTitle,\n  LoginButton,\n} from './LoginPage.style';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().trim().required('Invalid email'),\n  password: Yup.string().trim()\n    .required('Password is required'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport default class StudentLoginForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static propTypes = {\n    login: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool,\n    errorMessage: PropTypes.any,\n  }\n\n  login = (loginValues) => {\n    const { login } = this.props;\n    login(loginValues);\n  }\n\n  renderLoginBtn = () => {\n    const { isLoading } = this.props;\n    return (\n      isLoading\n        ? <LoginButton primary>Loading ...</LoginButton>\n        : <LoginButton type=\"submit\">Login</LoginButton>\n    );\n  }\n\n  render() {\n    return (\n      <LoginItemWrap>\n        <LoginItem>\n          <LoginTitle>\n            <h1>Welcome to Aspire</h1>\n          </LoginTitle>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={this.login}\n          >\n            <Form noValidate>\n              <FormInput\n                type=\"email\"\n                name=\"email\"\n                label=\"Email or Username\"\n              />\n              <FormInput\n                type={'password'}\n                name=\"password\"\n                label=\"Password\"\n              />\n              {this.renderLoginBtn()}\n            </Form>\n          </Formik>\n\n          <Link to=\"/register\">\n            <LoginButton register>Register</LoginButton>\n          </Link>\n        </LoginItem>\n      </LoginItemWrap>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}