{"ast":null,"code":"var _jsxFileName = \"/Users/mr942/Projects/mini-aspire/src/components/RegisterPage/UserRegister.js\";\nimport React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../FormInput/FormInput';\nimport { LoginItemWrap, LoginItem, LoginTitle, LoginButton } from '../LoginPage/LoginPage.style';\nconst validationSchema = Yup.object().shape({\n  userName: Yup.string().trim().required('Required'),\n  email: Yup.string().email('Invalid Email').trim().required('Required'),\n  password: Yup.string().trim().notOneOf(['123456', 123456], 'Your password is too simple').min(8, 'The password is greater than 8 characters').matches(/[0-9]/, 'The password contains at least one number').required('Required'),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Your password and confirm password is not match').required('Required')\n});\nconst initialValues = {\n  userName: '',\n  itentityNumber: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\nexport default class UserRegister extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.userRegisterSubmit = values => {\n      console.log(\"TCL: values\", values);\n      const userRegister = this.props.userRegister;\n      userRegister(values, 1);\n    };\n\n    this.renderLoginBtn = () => {\n      const isLoading = this.props.isLoading;\n      return isLoading ? React.createElement(LoginButton, {\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Loading ...\") : React.createElement(LoginButton, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Create account\");\n    };\n  }\n\n  render() {\n    return React.createElement(LoginItemWrap, {\n      noFlex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(LoginItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(LoginTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"User Register\")), React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.userRegisterSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"userName\",\n      label: \"User Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      showPassword: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      label: \"Confirm password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), this.renderLoginBtn(), React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(LoginButton, {\n      register: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Back to login\"))))));\n  }\n\n}\nUserRegister.propTypes = {\n  isLoading: PropTypes.bool,\n  userRegister: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/mr942/Projects/mini-aspire/src/components/RegisterPage/UserRegister.js"],"names":["React","PureComponent","Link","PropTypes","Formik","Form","Yup","FormInput","LoginItemWrap","LoginItem","LoginTitle","LoginButton","validationSchema","object","shape","userName","string","trim","required","email","password","notOneOf","min","matches","confirmPassword","oneOf","ref","initialValues","itentityNumber","UserRegister","userRegisterSubmit","values","console","log","userRegister","props","renderLoginBtn","isLoading","render","propTypes","bool","func","isRequired"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from '../FormInput/FormInput';\nimport {\n  LoginItemWrap,\n  LoginItem,\n  LoginTitle,\n  LoginButton,\n} from '../LoginPage/LoginPage.style';\n\nconst validationSchema = Yup.object().shape({\n  userName: Yup.string().trim().required('Required'),\n  email: Yup.string().email('Invalid Email').trim().required('Required'),\n  password: Yup.string().trim()\n    .notOneOf(['123456', 123456], 'Your password is too simple')\n    .min(8, 'The password is greater than 8 characters')\n    .matches(/[0-9]/, 'The password contains at least one number')\n    .required('Required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Your password and confirm password is not match')\n    .required('Required'),\n});\n\n\nconst initialValues = {\n  userName: '',\n  itentityNumber: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport default class UserRegister extends PureComponent {\n  static propTypes = {\n    isLoading: PropTypes.bool,\n    userRegister: PropTypes.func.isRequired,\n  }\n\n  userRegisterSubmit = (values) => {\n    console.log(\"TCL: values\", values);\n    const { userRegister } = this.props;\n    userRegister(values, 1);\n  }\n\n  renderLoginBtn = () => {\n    const { isLoading } = this.props;\n    return (\n      isLoading\n        ? <LoginButton primary>Loading ...</LoginButton>\n        : <LoginButton type=\"submit\">Create account</LoginButton>\n    );\n  }\n\n  render() {\n    return (\n      <LoginItemWrap noFlex>\n        <LoginItem>\n          <LoginTitle>\n            <h1>User Register</h1>\n          </LoginTitle>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={this.userRegisterSubmit}\n          >\n            <Form>\n              <FormInput\n                type=\"text\"\n                name=\"userName\"\n                label=\"User Name\"\n              />\n              <FormInput\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n              />\n              <FormInput\n                type=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                showPassword\n              />\n              <FormInput\n                type=\"password\"\n                name=\"confirmPassword\"\n                label=\"Confirm password\"\n              />\n              {this.renderLoginBtn()}\n              <Link to=\"/login\">\n                <LoginButton register>Back to login</LoginButton>\n              </Link>\n            </Form>\n          </Formik>\n        </LoginItem>\n      </LoginItemWrap>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}